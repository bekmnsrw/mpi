#include <cstdio>
#include "mpi.h"

/*
 * Задача:
 *     Hello world из всех процессов (2 балла)
 * Спецификация задачи:
 *     Уметь запускать MPI
*/

int main(int argc, char **argv)
{
    int rank, size;

    /*
     * Инициализация, MPI_Init вызывается каждым процессором только один раз,
     * все остальные функции MPI могут быть вызваны только после нее.
     *
     * После инициализации все активные процессоры объединяются в общую группу с единым коммуникатором MPI_COMM_WORLD
     * (коммуникатор по умолчанию).
     *
     * Коммуникатор - специально создаваемый служебный объект, объединяющий в своем составе группу процессоров и ряд
     * дополнительных параметров, используемых при передаче данных.
     *
     * При вызове любой функции/процедуры MPI, мы должны указать в рамках какого коммуникатора она должна выполняться.
    */
    MPI_Init(&argc, &argv);

    /* Позволяет определить общее количество процессов в группе */
    MPI_Comm_size(MPI_COMM_WORLD, &size);

    /* Позволяет определить номер каждого процесса */
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);

    printf("Hello, world! Total Number of Processors: %d, Processor's Rank: %d\n", size, rank);

    /*
     * Объявляет завершение выполнения параллельной части программы.
     * После вызова MPI_Finalize мы не имеем права обращаться к функциям MPI, даже к MPI_Init
     */
    MPI_Finalize();
    return 0;
}
